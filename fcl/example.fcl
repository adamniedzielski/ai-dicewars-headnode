FUNCTION_BLOCK dicewars

VAR_INPUT       
  your_dices : REAL;
  enemy_dices : REAL;
  your_total_dices : REAL;
  enemy_total_dices : REAL;
  your_total_vertices : REAL;
  enemy_total_vertices : REAL;
  your_connections : REAL;
  enemy_connections : REAL;
  maximum_enemy_support : REAL;
  your_maximum_threat : REAL;
  your_maximum_connected_vertices : REAL;
  enemy_maximum_connected_vertices : REAL;
  your_maximum_connected_vertices_after_you_winning : REAL;
  enemy_maximum_connected_vertices_after_you_loosing : REAL;
  your_maximum_connected_vertices_difference_before_after_you_winning : REAL;
  enemy_maximum_connected_vertices_difference_before_after_you_loosing : REAL;
END_VAR

VAR_OUTPUT        
  success : REAL;
END_VAR



// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
FUZZIFY your_dices    
  TERM poor := (0, 1) (3, 0) ; 
  TERM good := (2, 0) (3, 1) (4, 1) (5, 0);
  TERM excellent := (4, 0) (9, 1);
END_FUZZIFY

FUZZIFY enemy_dices 
  TERM poor := (0, 1) (2, 0) ; 
  TERM good := (1, 0) (2, 1) (3, 1) (4, 0);
  TERM excellent := (3, 0) (9, 1);
END_FUZZIFY

DEFUZZIFY success     
  TERM low := (0,0) (3,1) (10,0);
  TERM average := (3,0) (6,1) (9,0);
  TERM high := (9,0) (12,1) (15,0);
  METHOD : COG;
  DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
  AND : MIN;  // Use 'min' for 'and'
  ACT : MIN;  // Use 'min' activation method
  ACCU : MAX; // Use 'max' accumulation method

  RULE 1 : IF your_dices IS poor AND enemy_dices IS excellent THEN success IS low;
  RULE 2 : IF your_dices IS good OR enemy_dices IS poor THEN success IS average; 
  RULE 3 : IF your_dices IS excellent THEN success IS high;
END_RULEBLOCK

END_FUNCTION_BLOCK